import { GoogleOneTapClient } from './OneTapClient';
import { CredentialResponse } from 'google-one-tap';
import { ClientsideServicesProvider } from '../ClientsideServicesProvider';
export declare const loadGoogleOneTapClient: () => Promise<google.accounts['id']>;
type OneTapNotLoadedReason = 'oauth_config_not_found' | 'no_login_redirect_urls_set' | 'no_signup_redirect_urls_set' | string;
type OneTapLoadResult = {
    success: true;
    client: GoogleOneTapClient;
} | {
    success: false;
    reason: OneTapNotLoadedReason;
};
export declare class OneTapProvider {
    private _publicToken;
    private clientsideServices;
    private googleConfig?;
    constructor(_publicToken: string, clientsideServices: ClientsideServicesProvider);
    createOneTapClient(): Promise<OneTapLoadResult>;
    createOnSuccessHandler: ({ loginRedirectUrl, signupRedirectUrl, onSuccess, }: {
        loginRedirectUrl?: string | undefined;
        signupRedirectUrl?: string | undefined;
        onSuccess: (redirect_url: string) => void;
    }) => (response: CredentialResponse) => Promise<void>;
    private fetchGoogleStart;
    private submitGoogleOneTapToken;
    RedirectOnSuccess: (redirect_url: string) => void;
    static WillGoogleOneTapShowBannerForUA(ua: string): boolean;
    /**
     * Google One Tap will show a banner on the bottom of the screen on certain mobile devices
     * This logic is controlled via some sniffing of the useragent string on startup
     * These specific strings were extracted from the One Tap minified source code
     * See the linked PR for details and screenshots
     */
    static WillGoogleOneTapShowEmbedded(): boolean;
}
export {};
