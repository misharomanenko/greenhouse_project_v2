import { InternalStytchClientOptions } from '@stytch/core';
import { EmailMagicLinksOptions, MagicLinksLoginOrCreateOptions, PasswordOptions, PasswordResetByEmailStartOptions } from '@stytch/core/public';
export declare const EMAIL_REGEX: RegExp;
export declare const convertMagicLinkOptions: (options: EmailMagicLinksOptions) => MagicLinksLoginOrCreateOptions;
export declare const convertPasswordResetOptions: (email: string, options: PasswordOptions) => PasswordResetByEmailStartOptions;
export declare const debounce: <F extends (...args: Parameters<F>) => ReturnType<F>>(func: F, waitFor?: number) => (...args: Parameters<F>) => void;
export declare const isLocalhost: () => boolean;
export type DeepRequired<T> = {
    [K in keyof T]: DeepRequired<T[K]>;
} & Required<T>;
export declare const buildFinalConfig: (opts?: InternalStytchClientOptions) => {
    cookieOptions: {
        opaqueTokenCookieName?: string | undefined;
        jwtCookieName?: string | undefined;
        istCookieName?: string | undefined;
        path?: string | undefined;
        domain?: string | undefined;
        availableToSubdomains?: boolean | undefined;
    } | undefined;
    endpoints: {
        sdkBackendURL: string;
        testAPIURL: string;
        liveAPIURL: string;
        dfpBackendURL: string;
        clientsideServicesIframeURL: string;
    };
};
export declare const hasMultipleCookies: (cookieName: string) => boolean;
