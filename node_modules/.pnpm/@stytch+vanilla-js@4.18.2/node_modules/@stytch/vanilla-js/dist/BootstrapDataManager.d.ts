import { BootstrapData, RBACPolicyRaw, DFPProtectedAuthMode, INetworkClient } from '@stytch/core';
import { B2BSubscriptionDataLayer, ConsumerSubscriptionDataLayer } from './SubscriptionService';
export interface IBootstrapData {
    getSync: () => BootstrapData;
    getAsync: () => Promise<BootstrapData>;
}
interface RawBootstrapData {
    request_id: string;
    status_code: number;
    disable_sdk_watermark: boolean;
    cname_domain: string | null;
    email_domains: string[];
    captcha_settings: BootstrapData['captchaSettings'];
    pkce_required_for_email_magic_links: boolean;
    pkce_required_for_password_resets: boolean;
    pkce_required_for_oauth: boolean;
    pkce_required_for_sso: boolean;
    slug_pattern: string | null;
    create_organization_enabled: boolean;
    password_config: {
        luds_complexity: number;
        luds_minimum_count: number;
    } | null;
    dfp_protected_auth_enabled?: boolean;
    dfp_protected_auth_mode?: DFPProtectedAuthMode;
    rbac_policy?: RBACPolicyRaw;
    siwe_required_for_crypto_wallets: boolean;
}
export declare class BootstrapDataManager implements IBootstrapData {
    private _publicToken;
    private _networkClient;
    private _dataLayer;
    private readonly _bootstrapDataPromise;
    constructor(_publicToken: string, _networkClient: INetworkClient, _dataLayer: ConsumerSubscriptionDataLayer | B2BSubscriptionDataLayer);
    static mapBootstrapData(response: RawBootstrapData): BootstrapData;
    getSync(): BootstrapData;
    getAsync(): Promise<BootstrapData>;
}
export {};
