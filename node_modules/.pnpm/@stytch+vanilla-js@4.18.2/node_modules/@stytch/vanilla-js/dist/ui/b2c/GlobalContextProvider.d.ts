import React from 'react';
import { StytchUIClient } from '../../StytchUIClient';
import { DeepRequired } from '../../utils';
import { StytchLoginConfig, OTPMethods, Wallets, StyleConfig, Callbacks } from '@stytch/core/public';
import { Action } from './reducer';
export declare enum AppScreens {
    Main = "Main",
    PasskeyRegistrationStart = "Register New Passkey",
    PasskeyRegistrationSuccess = "Passkey Registration Success",
    PasskeyConfirmation = "Passkey Confirmation",
    PasswordCreateOrLogin = "Password",
    PasswordResetForm = "Password Reset Form",
    PasswordForgot = "Password Forgot",
    PasswordBreached = "Password Breached",
    PasswordSetNew = "Password Set New",
    PasswordDedupe = "Password Dedupe",
    PasswordConfirmation = "Password Confirmation",
    EmailConfirmation = "Email Confirmation",
    OTPAuthenticate = "OTP Authenticate",
    OTPConfirmation = "OTP Confirmation",
    CryptoConnect = "Crypto Connect",
    CryptoSignMessage = "Crypto Sign Message",
    CryptoOtherScreen = "Crypto Other Screen",
    CryptoSetupWallet = "Crypto Setup Wallet",
    CryptoError = "Crypto Error",
    CryptoConfirmation = "Crypto Confirmation"
}
export type MagicLinkState = {
    email: string;
};
export type OTPState = {
    type: OTPMethods;
    methodId: string;
    otpDestination: string;
};
export type PasswordState = {
    email: string;
    type: 'new' | 'passwordless' | 'password';
};
export type CryptoState = {
    walletAddress: string;
    walletOption: Wallets;
    walletChallenge: string;
};
export type ResetPasswordState = {
    token: string;
};
export type FormState = {
    magicLinkState: MagicLinkState;
    otpState: OTPState;
    cryptoState: CryptoState;
    passwordState: PasswordState;
    resetPasswordState: ResetPasswordState;
    errorMessage: string | undefined;
};
export type AppState = {
    screen: AppScreens;
    formState: FormState;
};
export type AppContext = {
    client: StytchUIClient;
    config: StytchLoginConfig;
    callbacks?: Callbacks;
    state: [AppState, React.Dispatch<Action>];
};
export declare const DEFAULT_STATE: AppState;
export declare const DEFAULT_CONFIG: StytchLoginConfig;
export declare const DEFAULT_STYLE_CONFIG: Omit<DeepRequired<StyleConfig>, 'inputs'>;
export declare const GlobalContext: React.Context<AppContext>;
export type GlobalContextProviderProps = {
    children: React.ReactNode;
    client: StytchUIClient;
    config: StytchLoginConfig;
    callbacks?: Callbacks;
    initialState?: AppState;
};
export declare const GlobalContextProvider: ({ children, client, config, callbacks, initialState, }: GlobalContextProviderProps) => React.JSX.Element;
export declare const useGlobalContext: () => AppContext;
export declare const useStytch: () => StytchUIClient;
export declare const useGlobalReducer: () => [AppState, React.Dispatch<Action>];
export declare const useConfig: () => StytchLoginConfig;
export declare const useErrorCallback: () => (error: import("@stytch/core/public").StytchSDKUIError) => void;
export declare const useEventCallback: () => (event: import("@stytch/core/public").StytchEvent) => void;
