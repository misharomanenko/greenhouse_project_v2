import React from 'react';
import { StytchB2BUIClient } from '../../b2b/StytchB2BUIClient';
import { StringLiteralFromEnum } from '@stytch/core';
import { AuthFlowType, Callbacks, DiscoveredOrganization, OrganizationBySlugMatch, StytchB2BUIConfig } from '@stytch/core/public';
import { MfaState } from './MfaState';
import { Action } from './reducer';
export declare enum AppScreens {
    Main = "Main",
    EmailConfirmation = "Email Confirmation",
    LoggedIn = "Logged In",
    Discovery = "Discovery",
    Error = "Error",
    PasswordEmailForm = "Password Email",
    PasswordAuthenticate = "Password Authenticate",
    PasswordResetForm = "Password Reset Form",
    PasswordResetVerifyConfirmation = "Password Reset Verify Confirmation",
    PasswordForgotForm = "Password Forgot Form",
    PasswordSetNewConfirmation = "Password Set New Confirmation",
    MFAEnrollmentSelection = "MFA Enrollment Selection",
    RecoveryCodeEntry = "Recovery Code Entry",
    RecoveryCodeSave = "Recovery Code Save",
    SMSOTPEnrollment = "SMS OTP Enrollment",
    SMSOTPEntry = "SMS OTP Entry",
    TOTPEnrollmentManual = "TOTP Enrollment Manual",
    TOTPEnrollmentQRCode = "TOTP Enrollment QR Code",
    TOTPEntry = "TOTP Entry"
}
export declare enum ErrorType {
    Default = 0,
    EmailMagicLink = 1,
    Organization = 2
}
export type MagicLinkState = {
    email: string;
};
export type DiscoveryState = {
    email: string;
    intermediateSessionToken: string;
    discoveredOrganizations: DiscoveredOrganization[];
};
export type PasswordState = {
    email: string;
};
export type FormState = {
    magicLinkState: MagicLinkState;
    discoveryState: DiscoveryState;
    passwordState: PasswordState;
};
export type FlowState = {
    type: StringLiteralFromEnum<AuthFlowType>;
    organization: null | OrganizationBySlugMatch;
};
export type AppState = {
    screen: AppScreens;
    formState: FormState;
    flowState: FlowState;
    mfa: MfaState;
    errorType: ErrorType;
};
export type AppContext = {
    client: StytchB2BUIClient;
    config: StytchB2BUIConfig;
    callbacks?: Callbacks;
    state: [AppState, React.Dispatch<Action>];
};
export declare const DEFAULT_STATE: AppState;
export declare const DEFAULT_CONFIG: StytchB2BUIConfig;
export declare const GlobalContext: React.Context<AppContext>;
export type GlobalContextProviderProps = {
    children: React.ReactNode;
    client: StytchB2BUIClient;
    config: StytchB2BUIConfig;
    callbacks?: Callbacks;
    initialState?: AppState;
};
export declare const GlobalContextProvider: ({ children, client, config, callbacks, initialState, }: GlobalContextProviderProps) => React.JSX.Element;
export declare const useGlobalContext: () => AppContext;
export declare const useStytch: () => StytchB2BUIClient;
export declare const useGlobalReducer: () => [AppState, React.Dispatch<Action>];
export declare const useConfig: () => StytchB2BUIConfig;
export declare const useErrorCallback: () => (error: import("@stytch/core/public").StytchSDKUIError) => void;
export declare const useEventCallback: () => (event: import("@stytch/core/public").StytchEvent) => void;
