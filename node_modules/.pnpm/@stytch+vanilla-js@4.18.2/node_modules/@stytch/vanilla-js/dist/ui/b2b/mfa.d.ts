import { CountryCode, StringLiteralFromEnum } from '@stytch/core';
import { B2BAuthenticateResponseWithMFA, B2BMFAProducts, B2BSMSSendResponse, B2BTOTPCreateResponse } from '@stytch/core/public';
import { Optional } from '../../utils/Optional';
import { AppState } from './GlobalContextProvider';
type PrimaryAuthenticateSuccessAction = {
    type: 'primary_authenticate_success';
    response: B2BAuthenticateResponseWithMFA;
    includedMfaMethods: readonly StringLiteralFromEnum<B2BMFAProducts>[] | undefined;
    resetTokenType?: string;
};
type StartEnrollmentAction = {
    type: 'mfa/start_enrollment';
    method: StringLiteralFromEnum<B2BMFAProducts>;
};
type TotpAuthenticateAction = {
    type: 'totp/authenticate_success';
};
type TotpCreateAction = {
    type: 'totp/create';
} | {
    type: 'totp/create_success';
    response: B2BTOTPCreateResponse;
    memberId: string;
    organizationId: string;
} | {
    type: 'totp/create_error';
    error: unknown;
};
type TotpNavigateToEntryAction = {
    type: 'totp/navigate_to_entry';
};
type TotpShowCodeAction = {
    type: 'totp/show_code';
    method?: 'qr' | 'manual';
};
type RecoveryCodeAuthenticateAction = {
    type: 'recovery_code/authenticate_success';
};
type RecoveryCodeNavigateToEntryAction = {
    type: 'recovery_code/navigate_to_entry';
};
type RecoveryCodeSaveAcknowledgeAction = {
    type: 'recovery_code/save_acknowledge';
};
type SmsOtpAuthenticateAction = {
    type: 'sms_otp/authenticate_success';
};
type SmsOtpSendAction = {
    type: 'sms_otp/send';
} | ({
    type: 'sms_otp/send_success';
    response: B2BSMSSendResponse;
} & Optional<{
    phoneNumber: string;
    countryCode: CountryCode;
    formattedPhoneNumber: string;
}>) | {
    type: 'sms_otp/send_error';
    error: unknown;
} | {
    type: 'sms_otp/format_destination';
    formattedPhoneNumber: string;
};
type SmsOtpNavigateToEntryAction = {
    type: 'sms_otp/navigate_to_entry';
};
export type MfaAction = PrimaryAuthenticateSuccessAction | RecoveryCodeAuthenticateAction | RecoveryCodeNavigateToEntryAction | RecoveryCodeSaveAcknowledgeAction | SmsOtpAuthenticateAction | SmsOtpNavigateToEntryAction | SmsOtpSendAction | StartEnrollmentAction | TotpAuthenticateAction | TotpCreateAction | TotpNavigateToEntryAction | TotpShowCodeAction;
export declare const B2B_MFA_METHODS: readonly [B2BMFAProducts.totp, B2BMFAProducts.smsOtp];
export declare const mfaReducer: (state: AppState, action: MfaAction) => AppState;
export {};
