import { DefaultTheme } from 'styled-components';
import { StyleConfig } from '@stytch/core/public';
declare module 'styled-components' {
    interface DefaultTheme {
        typography: {
            fontFamily: string;
            header: {
                fontFamily: string;
                fontSize: string | number;
                fontWeight: string | number;
                lineHeight: string;
            };
            body: {
                fontFamily: string;
                fontSize: string | number;
                fontWeight: string | number;
                lineHeight: string;
            };
            helper: {
                fontFamily: string;
                fontSize: string | number;
                fontWeight: string | number;
                lineHeight: string;
                whiteSpace?: 'pre-wrap';
            };
        };
        colors: {
            primary: string;
            secondary: string;
            success: string;
            error: string;
            disabledText: string;
            disabled: string;
        };
        container: {
            width: string;
            backgroundColor: string;
            border: string;
            borderRadius: string;
        };
        buttons: {
            primary: {
                backgroundColor: string;
                textColor: string;
                border: string;
                borderRadius: string;
            };
            secondary: {
                backgroundColor: string;
                textColor: string;
                border: string;
                borderRadius: string;
            };
            disabled: {
                backgroundColor: string;
                textColor: string;
                border: string;
                borderRadius: string;
            };
        };
        inputs: {
            backgroundColor: string;
            textColor: string;
            borderColor: string;
            borderRadius: string;
            placeholderColor: string;
        };
        displayHeader: boolean;
        displayWatermark: boolean;
        logo: {
            logoImageUrl: string;
        };
    }
}
export declare const createTheme: (styles: StyleConfig | undefined, displayWatermark?: boolean) => DefaultTheme;
export declare const useTheme: ({ styles, displayWatermark, }: {
    styles?: {
        container?: {
            backgroundColor?: string | undefined;
            borderColor?: string | undefined;
            borderRadius?: string | undefined;
            width?: string | undefined;
        } | undefined;
        colors?: {
            primary?: string | undefined;
            secondary?: string | undefined;
            success?: string | undefined;
            error?: string | undefined;
        } | undefined;
        buttons?: {
            primary?: {
                backgroundColor?: string | undefined;
                textColor?: string | undefined;
                borderColor?: string | undefined;
                borderRadius?: string | undefined;
            } | undefined;
            secondary?: {
                backgroundColor?: string | undefined;
                textColor?: string | undefined;
                borderColor?: string | undefined;
                borderRadius?: string | undefined;
            } | undefined;
            disabled?: {
                backgroundColor?: string | undefined;
                textColor?: string | undefined;
                borderColor?: string | undefined;
                borderRadius?: string | undefined;
            } | undefined;
        } | undefined;
        inputs?: {
            backgroundColor?: string | undefined;
            textColor?: string | undefined;
            placeholderColor?: string | undefined;
            borderColor?: string | undefined;
            borderRadius?: string | undefined;
        } | undefined;
        fontFamily?: string | undefined;
        hideHeaderText?: boolean | undefined;
        logo?: {
            logoImageUrl?: string | undefined;
        } | undefined;
    } | undefined;
    displayWatermark: boolean;
}) => DefaultTheme;
