import React from 'react';
import { MappedPropsFromRouteMap } from '../Router';
import { AdminPortalComponentMountOptions } from '../makeAdminPortalComponentMountFn';
import { B2BMFAProducts } from '@stytch/core/public';
import { EnumOrStringLiteral } from '@stytch/core';
import { AdminPortalUIConfigRoleDisplayProvider } from '../utils/AdminPortalUIConfigRoleDisplayProvider';
export declare enum AdminPortalB2BProducts {
    emailMagicLinks = "emailMagicLinks",
    sso = "sso",
    password = "password",
    oauthGoogle = "oauthGoogle",
    oauthMicrosoft = "oauthMicrosoft"
}
/**
 * The UI configuration object for organization used in the Admin Portal.
 */
export interface AdminPortalOrgUIConfig extends AdminPortalUIConfigRoleDisplayProvider {
    /**
     * Specify the auth methods that a member can choose to enable when restricting the organization's allowed auth methods.
     * If not specified, all auth methods are shown.
     */
    allowedAuthMethods?: EnumOrStringLiteral<AdminPortalB2BProducts>[];
    /**
     * Specify the MFA auth methods that a member can choose to enable when restricting the organization's allowed auth methods.
     * If not specified, all auth methods are shown.
     */
    allowedMfaAuthMethods?: EnumOrStringLiteral<B2BMFAProducts>[];
}
export interface AdminPortalOrgSettingsMountOptions extends AdminPortalComponentMountOptions {
    /**
     * An {@link AdminPortalOrgUIConfig} object containing custom configuration.
     */
    config?: AdminPortalOrgUIConfig;
}
declare const routeMap: {
    orgSettingsScreen: () => React.JSX.Element;
};
export type OrgSettingsRouterMappedProps = MappedPropsFromRouteMap<typeof routeMap>;
export declare const Content: () => React.JSX.Element;
export declare const AdminPortalOrgSettings: (props: AdminPortalOrgSettingsMountOptions) => React.JSX.Element;
export {};
