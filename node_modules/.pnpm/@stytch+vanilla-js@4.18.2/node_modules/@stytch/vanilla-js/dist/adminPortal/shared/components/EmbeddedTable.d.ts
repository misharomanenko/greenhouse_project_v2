import { ReactNode } from 'react';
import { Classes } from '../utils/composeStyles';
import { TableActionCoreProps } from './TableActions';
import { InjectedComponents } from './componentInjection';
import { TableItemRenderer } from './types';
export declare const makeEmbeddedTableStyles: <TProps extends object>(...styles: (Partial<import("@material-ui/core").StyleRules<"embeddedTableWithActions" | "tableCell" | "tableActionsCell" | "tableHeader" | "bottomAction", TProps>> | ((theme: import("@material-ui/core").Theme) => Partial<import("@material-ui/core").StyleRules<"embeddedTableWithActions" | "tableCell" | "tableActionsCell" | "tableHeader" | "bottomAction", TProps>>))[]) => keyof TProps extends never ? (props?: any) => import("@material-ui/styles").ClassNameMap<"embeddedTableWithActions" | "tableCell" | "tableActionsCell" | "tableHeader" | "bottomAction"> : (props: TProps) => import("@material-ui/styles").ClassNameMap<"embeddedTableWithActions" | "tableCell" | "tableActionsCell" | "tableHeader" | "bottomAction">;
export type EmbeddedTableCoreProps<T> = {
    itemRenderer: TableItemRenderer<T>[];
    items: T[];
    rowKeyExtractor?(item: T): string;
    getItemActionProps?: (item: T, setState: (state: Record<string, unknown>) => void, state?: Record<string, unknown>) => TableActionCoreProps;
    readOnly?: boolean;
    initialItemState?: Record<string, unknown>;
    bottomAction?: ReactNode;
};
export declare const EmbeddedTableCore: <T extends string | Record<string, unknown>>({ itemRenderer, items, rowKeyExtractor, getItemActionProps, readOnly, bottomAction, initialItemState, classes, TableActionsComponent: TableActions, TypographyComponent: Typography, }: EmbeddedTableCoreProps<T> & Classes<(<TProps extends object>(...styles: (Partial<import("@material-ui/core").StyleRules<"embeddedTableWithActions" | "tableCell" | "tableActionsCell" | "tableHeader" | "bottomAction", TProps>> | ((theme: import("@material-ui/core").Theme) => Partial<import("@material-ui/core").StyleRules<"embeddedTableWithActions" | "tableCell" | "tableActionsCell" | "tableHeader" | "bottomAction", TProps>>))[]) => keyof TProps extends never ? (props?: any) => import("@material-ui/styles").ClassNameMap<"embeddedTableWithActions" | "tableCell" | "tableActionsCell" | "tableHeader" | "bottomAction"> : (props: TProps) => import("@material-ui/styles").ClassNameMap<"embeddedTableWithActions" | "tableCell" | "tableActionsCell" | "tableHeader" | "bottomAction">)> & InjectedComponents<"Typography" | "TableActions">) => JSX.Element;
