type RbacMap = {
    'stytch.organization': [
        'update.info.name',
        'update.info.slug',
        'update.info.logo-url',
        'update.settings.allowed-auth-methods',
        'update.settings.allowed-mfa-methods',
        'update.settings.email-jit-provisioning',
        'update.settings.email-invites',
        'update.settings.allowed-domains',
        'update.settings.default-sso-connection',
        'update.settings.sso-jit-provisioning',
        'update.settings.mfa-policy',
        'update.settings.implicit-roles',
        'delete'
    ];
    'stytch.member': [
        'create',
        'update.info.name',
        'update.info.email',
        'update.info.untrusted-metadata',
        'update.info.mfa-phone',
        'update.info.delete.mfa-phone',
        'update.info.delete.mfa-totp',
        'update.info.delete.password',
        'update.settings.is-breakglass',
        'update.settings.mfa-enrolled',
        'update.settings.default-mfa-method',
        'update.settings.roles',
        'search',
        'delete',
        'revoke-sessions'
    ];
    'stytch.sso': ['create', 'get', 'update', 'delete'];
    'stytch.self': [
        'update.info.name',
        'update.info.untrusted-metadata',
        'update.info.mfa-phone',
        'update.info.delete.mfa-phone',
        'update.info.delete.password',
        'update.info.delete.mfa-totp',
        'update.settings.mfa-enrolled',
        'update.settings.default-mfa-method',
        'delete'
    ];
    'stytch.scim': ['create', 'get', 'update', 'delete'];
};
type RbacResourceId = keyof RbacMap;
type RbacAction<TResourceId extends RbacResourceId> = RbacMap[TResourceId][number];
export declare const useRbac: <TResourceId extends keyof RbacMap>(resourceId: TResourceId, action: RbacAction<TResourceId>) => import("swr/_internal").SWRResponse<boolean, any, {
    keepPreviousData: true;
}>;
export {};
