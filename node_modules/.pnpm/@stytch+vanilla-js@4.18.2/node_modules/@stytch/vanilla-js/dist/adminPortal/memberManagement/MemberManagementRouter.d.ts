/// <reference types="react" />
export declare const MemberManagementRouterProvider: ({ children, initialRoute, }: {
    children: import("react").ReactNode;
    initialRoute: import("../Router").RouterStateEntry<import("../Router").MappedPropsFromRouteMap<{
        membersList: () => import("react").JSX.Element;
        memberDetails: ({ memberId }: {
            memberId: string;
        }) => import("react").JSX.Element;
    }>>;
}) => import("react").JSX.Element, MemberManagementRouter: ({ routeMap }: {
    routeMap: {
        membersList: import("react").ComponentType<never>;
        memberDetails: import("react").ComponentType<{
            memberId: string;
        }>;
    };
}) => import("react").JSX.Element | null, useMemberManagementRouterController: () => import("../Router").RouterController<import("../Router").MappedPropsFromRouteMap<{
    membersList: () => import("react").JSX.Element;
    memberDetails: ({ memberId }: {
        memberId: string;
    }) => import("react").JSX.Element;
}>>, useMemberManagementRouterState: () => {
    currentRoute: import("../Router").RouterStateEntry<import("../Router").MappedPropsFromRouteMap<{
        membersList: () => import("react").JSX.Element;
        memberDetails: ({ memberId }: {
            memberId: string;
        }) => import("react").JSX.Element;
    }>>;
};
