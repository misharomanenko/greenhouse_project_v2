import { FC, ReactNode } from 'react';
import { OptionItem } from './types';
import { Classes } from '../utils/composeStyles';
export declare const makeCheckboxStyles: <TProps extends object>(...styles: (Partial<import("@material-ui/core").StyleRules<"checkbox" | "checkboxContainer", TProps>> | ((theme: import("@material-ui/core").Theme) => Partial<import("@material-ui/core").StyleRules<"checkbox" | "checkboxContainer", TProps>>))[]) => keyof TProps extends never ? (props?: any) => import("@material-ui/styles").ClassNameMap<"checkbox" | "checkboxContainer"> : (props: TProps) => import("@material-ui/styles").ClassNameMap<"checkbox" | "checkboxContainer">;
export type CheckboxCoreProps = Omit<OptionItem, 'value' | 'label'> & {
    autoFocus?: boolean;
    checked?: boolean;
    indeterminate?: boolean;
    label: ReactNode;
    onClick?: (checked: boolean, value: string) => void;
    value?: string;
};
export declare const CheckboxCore: FC<CheckboxCoreProps & Classes<typeof makeCheckboxStyles>>;
