import { TooltipProps } from '@material-ui/core';
import { ReactElement } from 'react';
import { Classes } from '../utils/composeStyles';
import { InjectedComponents } from './componentInjection';
export declare const makeTooltipStyles: <TProps extends object>(...styles: (Partial<import("@material-ui/core").StyleRules<"tooltip" | "targetWrapper", TProps>> | ((theme: import("@material-ui/core").Theme) => Partial<import("@material-ui/core").StyleRules<"tooltip" | "targetWrapper", TProps>>))[]) => keyof TProps extends never ? (props?: any) => import("@material-ui/styles").ClassNameMap<"tooltip" | "targetWrapper"> : (props: TProps) => import("@material-ui/styles").ClassNameMap<"tooltip" | "targetWrapper">;
export type TooltipCoreProps = {
    children: ReactElement;
    text: string;
    disabled?: boolean;
    placement?: TooltipProps['placement'];
};
export declare const TooltipCore: ({ text, children, disabled, placement, classes, TypographyComponent: Typography, }: TooltipCoreProps & Classes<typeof makeTooltipStyles> & InjectedComponents<'Typography'>) => JSX.Element;
