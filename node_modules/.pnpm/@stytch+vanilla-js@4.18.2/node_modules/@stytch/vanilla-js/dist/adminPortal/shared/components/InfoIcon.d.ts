/// <reference types="react" />
import { Classes } from '../utils/composeStyles';
import { InjectedComponents } from './componentInjection';
export declare const makeInfoIconStyles: <TProps extends object>(...styles: (Partial<import("@material-ui/core").StyleRules<"infoIconContainer" | "infoIcon", TProps>> | ((theme: import("@material-ui/core").Theme) => Partial<import("@material-ui/core").StyleRules<"infoIconContainer" | "infoIcon", TProps>>))[]) => keyof TProps extends never ? (props?: any) => import("@material-ui/styles").ClassNameMap<"infoIconContainer" | "infoIcon"> : (props: TProps) => import("@material-ui/styles").ClassNameMap<"infoIconContainer" | "infoIcon">;
export type InfoIconCoreProps = {
    tooltipText: string;
};
export declare const InfoIconCore: ({ tooltipText, classes, TooltipComponent: Tooltip, }: InfoIconCoreProps & Classes<typeof makeInfoIconStyles> & InjectedComponents<'Tooltip'>) => JSX.Element;
