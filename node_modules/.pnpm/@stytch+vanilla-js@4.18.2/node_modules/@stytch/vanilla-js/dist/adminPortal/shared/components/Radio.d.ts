/// <reference types="react" />
import { Classes } from '../utils/composeStyles';
export type OptionItem = {
    disabled?: boolean;
    label: string;
    value: string;
};
export declare const makeRadioStyles: <TProps extends object>(...styles: (Partial<import("@material-ui/core").StyleRules<"checkbox" | "root" | "checkboxContainer", TProps>> | ((theme: import("@material-ui/core").Theme) => Partial<import("@material-ui/core").StyleRules<"checkbox" | "root" | "checkboxContainer", TProps>>))[]) => keyof TProps extends never ? (props?: any) => import("@material-ui/styles").ClassNameMap<"checkbox" | "root" | "checkboxContainer"> : (props: TProps) => import("@material-ui/styles").ClassNameMap<"checkbox" | "root" | "checkboxContainer">;
export type RadioCoreProps = OptionItem & {
    autoFocus?: boolean;
    checked: boolean;
    onClick?: (value: string) => void;
};
export declare const RadioCore: ({ autoFocus, checked, disabled, label, onClick, value, classes, }: RadioCoreProps & Classes<typeof makeRadioStyles>) => JSX.Element;
