'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var b2b = require('@stytch/vanilla-js/b2b');

const cannotInvokeMethodOnServerError = (path) => `[Stytch] Invalid serverside function call to ${path}.
The Stytch Javascript SDK is intended to ony be used on the client side.
Make sure to wrap your API calls in a hook to ensure they are executed on the client.
\`\`\`
const myComponent = () => {
  const stytch = useStytch();
  // This will error out on the server.
  stytch.magicLinks.authenticate(...);
  useEffect(() => {
    // This will work well
    stytch.magicLinks.authenticate(...);
  }, []);
}
\`\`\`

If you want to make API calls from server environments, please use the Stytch Node Library
https://www.npmjs.com/package/stytch.
`;

const SSRStubKey = Symbol('__stytch_SSRStubKey');
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const createProxy = (path) => {
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    const noop = () => { };
    return new Proxy(noop, {
        get(target, p) {
            if (p === SSRStubKey) {
                return true;
            }
            return createProxy(path + '.' + String(p));
        },
        apply() {
            throw new Error(cannotInvokeMethodOnServerError(path));
        },
    });
};
const createStytchSSRProxy = () => createProxy('stytch');

/**
 * Creates a Stytch UI client object to call the Stytch APIs and render Stytch UI components.
 * The Stytch client is not available serverside.
 * If you do not use Stytch UI components, use {@link createStytchB2BHeadlessClient} to reduce your bundle size.
 * @example
 * const stytch = createStytchB2BUIClient('public-token-<find yours in the stytch dashboard>')
 *
 * return (
 *   <StytchB2BProvider stytch={stytch}>
 *     <App />
 *   </StytchB2BProvider>
 * )
 * @returns A {@link StytchB2BUIClient}
 */
const createStytchB2BUIClient = (...args) => {
    if (typeof window === 'undefined') {
        return createStytchSSRProxy();
    }
    return new b2b.StytchB2BUIClient(...args);
};

exports.createStytchB2BUIClient = createStytchB2BUIClient;
